name: Build and Release Plugin

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      commit_short: ${{ steps.vars.outputs.COMMIT_SHORT }}
      version: ${{ steps.extract_version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Build plugin
        run: |
          chmod +x gradlew
          ./gradlew buildPlugin

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(./gradlew -q properties | grep '^version:' | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Get short commit hash
        id: vars
        run: |
          COMMIT_SHORT=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT=$COMMIT_SHORT" >> $GITHUB_OUTPUT

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Prepare release metadata
        run: |
          echo "RELEASE_DATE=$(date +'%d.%m.%Y')" >> $GITHUB_ENV
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Create and upload GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{ needs.build.outputs.commit_short }}
          name: Release ${{ needs.build.outputs.version }}-${{ needs.build.outputs.commit_short }} (built on ${{ env.RELEASE_DATE }})
          body: |
            Automatic build from commit ${{ github.sha }}
            Branch: ${{ env.BRANCH_NAME }}
          files: |
            build/distributions/*.zip

      - name: Show release URL
        run: |
          echo "Release created: https://github.com/${{ github.repository }}/releases/tag/build-${{ needs.build.outputs.commit_short }}"